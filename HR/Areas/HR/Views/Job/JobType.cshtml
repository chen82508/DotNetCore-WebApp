@{
    ViewData["Title"] = "職務類別";
    ViewData["Area"] = ViewContext.RouteData.Values["area"]?.ToString();
    ViewData["Controller"] = ViewContext.RouteData.Values["controller"]?.ToString();
    ViewData["Action"] = ViewContext.RouteData.Values["action"]?.ToString();
}

<div id="CategoryOverView">
    <div class="d-flex justify-content-between align-items-center">
        <h4 class="fw-bold py-3 mb-4">
            <span class="text-muted fw-light">人力資源系統 /</span>
            @ViewData["Title"]
        </h4>
        <button type="button" class="btn btn-primary" v-on:click="showModal('add', 0, 0, '')" data-bs-toggle="modal" data-bs-target="#MntModal">
            <span class="tf-icons bx bx-add-to-queue"></span>
            新增主項目
        </button>
    </div>
    <div class="row row-cols-1 row-cols-md-3 g-4 mb-5">
        <div v-for="m in main" class="col">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center bg-label-info">
                    <h5 class="mb-0">{{m.name}}</h5>
                    <div class="btn-group">
                        <button type="button" class="btn btn-icon btn-outline-primary" v-on:click="showModal('mnt', 0, m.id, m.name)" title="編輯主要項目" data-bs-toggle="modal" data-bs-target="#MntModal">
                            <span class="tf-icons bx bx-edit"
                                data-bs-toggle="tooltip"
                                data-bs-offset="0,12"
                                data-bs-placement="top"
                                data-bs-html="true"
                                data-bs-dismiss="tooltip"
                                data-bs-original-title="<span>編輯主要項目</span>"></span>
                        </button>
                        <button type="button" class="btn btn-icon btn-primary" v-on:click="showModal('add', m.id, 0, '')" title="新增子項目" data-bs-toggle="modal" data-bs-target="#MntModal">
                            <span class="tf-icons bx bx-add-to-queue"
                                data-bs-toggle="tooltip"
                                data-bs-offset="0,12"
                                data-bs-placement="top"
                                data-bs-html="true"
                                data-bs-dismiss="tooltip"
                                data-bs-original-title="<span>新增子項目</span>"></span>
                        </button>
                        <button type="button" class="btn btn-icon btn-danger" v-on:click="deleteData(0, m.id)" title="刪除此主要項目">
                            <span class="tf-icons bx bx-message-square-minus"
                                data-bs-toggle="tooltip"
                                data-bs-offset="0,12"
                                data-bs-placement="top"
                                data-bs-html="true"
                                data-bs-dismiss="tooltip"
                                data-bs-original-title="<span>刪除此主要項目</span>"></span>
                        </button>
                    </div>
                </div>
                <ul v-if="getSubs(m.id).length > 0" class="list-group list-group-flush">
                    <li v-for="sub in getSubs(m.id)" class="list-group-item">
                        <div class="d-flex justify-content-between align-items-center">
                            <span>{{sub.name}}</span>
                            <div class="btn-group">
                                <button type="button" class="btn btn-icon btn-outline-secondary" v-on:click="showModal('mnt', sub.tid, sub.id, sub.name)" title="編輯子項目"
                                    data-bs-toggle="modal" data-bs-target="#MntModal">
                                    <span class="tf-icons bx bx-edit"
                                        data-bs-toggle="tooltip"
                                        data-bs-offset="0,12"
                                        data-bs-placement="top"
                                        data-bs-html="true"
                                        data-bs-dismiss="tooltip"
                                        data-bs-original-title="<span>編輯子項目</span>"></span>
                                </button>
                                <button type="button" class="btn btn-icon btn-danger" v-on:click="deleteData(sub.tid, sub.id)" title="刪除此子項目">
                                    <span class="tf-icons bx bx-message-square-minus"
                                        data-bs-toggle="tooltip"
                                        data-bs-offset="0,12"
                                        data-bs-placement="top"
                                        data-bs-html="true"
                                        data-bs-dismiss="tooltip"
                                        data-bs-original-title="<span>刪除此子項目</span>"></span>
                                </button>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>

        <div id="MntModal" class="modal fade" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">{{mntOpt.opt === 'add' ? '新增' : '編輯'}}{{mntOpt.tid === 0 ? '主' : '子'}}項目</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col mb-3">
                                <label for="category-name" class="form-label"><span style="color: red">*</span>{{mntOpt.tid === 0 ? '主' : '子'}}項目名稱</label>
                                <input type="text" id="category-name" class="form-control"
                                    v-model.trim="mntOpt.name"
                                    :placeholder="`請輸入${(mntOpt.tid === 0 ? '主' : '子')}項目名稱`" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">關閉</button>
                        <button v-if="mntOpt.opt === 'add'" type="button" class="btn btn-success" v-on:click="addCatetory()">新增</button>
                        <button v-else type="button" class="btn btn-success" data-bs-dismiss="modal" v-on:click="saveChange()">儲存</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var overview = Vue.createApp({
        data() {
            return {
                main: [], subs: [],
                mntOpt: { opt: '', tid: 0, id: 0, name: '' },
            };
        },
        created() { this.initialData(); },
        methods: {
            initialData() {
                let self = this;
                postMethod('/API/Job/TypeTags', toggleLoading(true), (res) => { self.main = res; }, true);
                postMethod('/API/Job/Types', null, (res) => { self.subs = res; toggleLoading(false); }, true);
            },
            getSubs(tid) { return this.subs.filter(x => x.tid === tid); },
            showModal(opt, tid, id, name) {
                this.mntOpt.opt = opt;
                this.mntOpt.tid = tid;
                this.mntOpt.id = id;
                this.mntOpt.name = name;
            },
            hasName() { return this.mntOpt.name !== '' },
            addCatetory() {
                if (!this.hasName()) {
                    alert(`${this.mntOpt.tid === 0 ? '主' : '子'}項目名稱為必填欄位`);
                    return false;
                }
                
                if (this.mntOpt.tid === 0) {
                    postMethod('/API/Job/Add/TypeTag', null, (res) => { this.main.push(res); }, false, { name: this.mntOpt.name });
                } else {
                    postMethod('/API/Job/Add/Type', null, (res) => { this.subs.push(res); }, false, { tid: this.mntOpt.tid, name: this.mntOpt.name });
                }
            },
            saveChange() {
                if (!this.hasName()) {
                    alert(`${this.mntOpt.tid === 0 ? '主' : '子'}項目名稱為必填欄位`);
                    return false;
                }

                if (confirm("確定儲存此筆資料?")) {
                    if (this.mntOpt.tid === 0) {
                        patchMethod('/API/Job/Update/TypeTag', { id: this.mntOpt.id, name: this.mntOpt.name }, (res) => {
                            let newMain = this.main.find(m => m.id === res.id);
                            newMain.name = res.name;
                            alert('更新成功');
                        });
                    } else {
                        patchMethod('/API/Job/Update/Type', { id: this.mntOpt.id, name: this.mntOpt.name }, (res) => {
                            let newSub = this.subs.find(s => s.id === res.id);
                            newSub.name = res.name;
                            alert('更新成功');
                        });
                    }

                    this.initialData();
                }
            },
            deleteData(tid, id) {
                if (confirm("確定要刪除此筆資料?")) {
                    if (tid === 0) {
                        if (this.getSubs(id).length > 0) {
                            alert("此主項目下已存在子項目，請先移除所有子項目再刪除");
                            return false;
                        }
                        deleteMethod(`/API/Job/Delete/TypeTag/${id}`, null, (res) => {
                            console.log(`Delete job type tag data: ${JSON.stringify(res)}`)
                            setTimeout(() => {
                                this.main = this.main.filter(m => m.id !== id);
                            }, 150);
                        });
                    } else {
                        deleteMethod(`/API/Job/Delete/Type/${id}`, null, (res) => {
                            console.log(`Delete job type data: ${JSON.stringify(res)}`)
                            setTimeout(() => {
                                this.subs = this.subs.filter(s => s.id !== id);
                            }, 150);
                        });
                    }
                }
            }
        },
    }).mount('#CategoryOverView');
</script>